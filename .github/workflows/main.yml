name: Build & publish

on:
  pull_request: { }
  push:
    branches:
      - main
    tags:
      - v*.*.*

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      is-release: ${{ steps.metadata.outputs.is-release }}
      publishable: ${{ steps.metadata.outputs.publishable }}
      version: ${{ steps.metadata.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup asdf-vm
        uses: kronostechnologies/actions/with-asdf-vm@v0.0.18
      - name: Find application metadata
        id: metadata
        uses: kronostechnologies/actions/application-metadata@v0.0.18

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup asdf-vm
        uses: kronostechnologies/actions/with-asdf-vm@v0.0.18

      - name: Compile source and test code
        uses: burrunan/gradle-cache-action@v1.10
        with:
          gradle-version: wrapper
          arguments: "assemble"
          properties: |
            application.version=${{ needs.setup.outputs.version }}
            gpr.user=${{ secrets.GHCR_USER }}
            gpr.key=${{ secrets.GHCR_TOKEN }}

      - name: Upload JAR
        uses: actions/upload-artifact@v2
        if: ${{ success() }}
        with:
          name: equisoft-plan-sdk-micronaut-${{ needs.setup.outputs.version }}.jar
          path: build/libs/equisoft-plan-sdk-micronaut-${{ needs.setup.outputs.version }}.jar
          retention-days: 5
          if-no-files-found: error

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [setup, build]
    if: ${{ needs.setup.outputs.publishable == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download JAR
        uses: actions/download-artifact@v2
        with:
          name: equisoft-plan-sdk-micronaut-${{ needs.setup.outputs.version }}.jar
          path: build/libs/equisoft-plan-sdk-micronaut-${{ needs.setup.outputs.version }}.jar

      # Setup asdf-vm
      - name: Cache asdf tooling
        uses: actions/cache@v2
        with:
          key: asdf-${{ runner.os }}-${{ hashFiles('.tool-versions') }}
          restore-keys: asdf-${{ runner.os }}-
          path: |
            ${ASDF_DIR}/installs
            ${ASDF_DIR}/plugins
      - name: Install required tooling
        uses: asdf-vm/actions/install@v1

      - name: Switch to the asdf-provided version of java
        run: |
          echo "JAVA_HOME=$(dirname "$(dirname "$(realpath "$(asdf which java)")")")" >> $GITHUB_ENV;

      # Publish
      - name: Publish
        uses: burrunan/gradle-cache-action@v1.10
        with:
          gradle-version: wrapper
          arguments: "publish"
          properties: |
            application.version=${{ needs.setup.outputs.version }}
            gpr.user=${{ secrets.GHCR_USER }}
            gpr.key=${{ secrets.GHCR_TOKEN }}

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [setup, build, publish]
    if: failure() && needs.setup.outputs.publishable == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Find workflow status
        id: workflow
        shell: bash
        run: |
          STATUS=success
          if [[ "${{ contains(needs.*.result, 'cancelled') }}" == "true" ]]; then
            STATUS=cancelled
          elif [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
            STATUS=failure
          fi

          echo ::set-output name=status::$STATUS
      - name: Post workflow status
        uses: kronostechnologies/actions/notify-workflow-status@v0.0.18
        with:
          slack-webhook-url: ${{ secrets.OPS_CI_WEBHOOK_URL }}
          workflow-status: ${{ steps.workflow.outputs.status }}
